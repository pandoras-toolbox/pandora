openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - description: Generated server url
    url: http://localhost:8080
paths:
  /:
    get:
      operationId: index
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RepresentationModelObject"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                type: string
          description: Not Found
      tags:
        - root-controller
  /employees:
    get:
      operationId: getEmployees
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CollectionModelEntityModelEmployee"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                type: string
          description: Not Found
      summary: Get all employees
      tags:
        - employee-controller
    post:
      operationId: createNewEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EntityModelEmployee"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                type: string
          description: Not Found
      summary: Create new employee
      tags:
        - employee-controller
  /employees/{id}:
    delete:
      operationId: deleteEmployee
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Employee"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                type: string
          description: Not Found
      summary: Delete employee by ID
      tags:
        - employee-controller
    get:
      operationId: getEmployee
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EntityModelEmployee"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                type: string
          description: Not Found
      summary: Get employee by ID
      tags:
        - employee-controller
    put:
      operationId: replaceEmployee
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EntityModelEmployee"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                type: string
          description: Not Found
      summary: Replace employee by ID
      tags:
        - employee-controller
  /orders:
    get:
      operationId: getOrders
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CollectionModelEntityModelOrder"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                type: string
          description: Not Found
      summary: Get all orders
      tags:
        - order-controller
    post:
      operationId: createNewOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EntityModelOrder"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                type: string
          description: Not Found
      summary: Create new order
      tags:
        - order-controller
  /orders/{id}:
    get:
      operationId: getOrder
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EntityModelOrder"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                type: string
          description: Not Found
      summary: Get order by ID
      tags:
        - order-controller
  /orders/{id}/cancel:
    delete:
      operationId: cancelOrder
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderResponse"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                type: string
          description: Not Found
      summary: Cancel order by ID
      tags:
        - order-controller
  /orders/{id}/complete:
    put:
      operationId: completeOrder
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderResponse"
          description: OK
        "404":
          content:
            '*/*':
              schema:
                type: string
          description: Not Found
      summary: Complete order by ID
      tags:
        - order-controller
components:
  schemas:
    CollectionModelEntityModelEmployee:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            employeeList:
              type: array
              items:
                $ref: "#/components/schemas/EntityModelEmployee"
        _links:
          $ref: "#/components/schemas/Links"
    CollectionModelEntityModelOrder:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            orderList:
              type: array
              items:
                $ref: "#/components/schemas/EntityModelOrder"
        _links:
          $ref: "#/components/schemas/Links"
    Employee:
      type: object
      properties:
        firstName:
          type: string
        id:
          type: string
          format: uuid
        lastName:
          type: string
        name:
          type: string
        role:
          type: string
      required:
        - firstName
        - lastName
    EntityModelEmployee:
      type: object
      properties:
        _links:
          $ref: "#/components/schemas/Links"
        firstName:
          type: string
        id:
          type: string
          format: uuid
        lastName:
          type: string
        name:
          type: string
        role:
          type: string
      required:
        - firstName
        - lastName
    EntityModelOrder:
      type: object
      properties:
        _links:
          $ref: "#/components/schemas/Links"
        description:
          type: string
        id:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - IN_PROGRESS
            - COMPLETED
            - CANCELLED
      required:
        - status
    Link:
      type: object
      properties:
        deprecation:
          type: string
        href:
          type: string
        hreflang:
          type: string
        name:
          type: string
        profile:
          type: string
        templated:
          type: boolean
        title:
          type: string
        type:
          type: string
    Links:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Link"
    Order:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - IN_PROGRESS
            - COMPLETED
            - CANCELLED
      required:
        - status
    OrderResponse:
      type: object
      properties:
        entityModel:
          $ref: "#/components/schemas/EntityModelOrder"
        problem:
          $ref: "#/components/schemas/Problem"
    Problem:
      type: object
      properties:
        detail:
          type: string
        instance:
          type: string
          format: uri
        status:
          type: integer
          format: int32
        title:
          type: string
        type:
          type: string
          format: uri
    RepresentationModelObject:
      type: object
      properties:
        _links:
          $ref: "#/components/schemas/Links"
